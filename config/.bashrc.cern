# bashrc file for CERN dev computers

#########
# PATHS #
#########

FGCROOT=/afs/cern.ch/user/m/mhermose/projects/fgc/

export PERL5LIB=$FGCROOT/sw/clients/perl:$FGCROOT/sw/utilities/perl:$FGCROOT/sw/lib/extern/perl:$PERL5LIB

#######
# SSH #
#######

function sshagent_findsockets {
    find /tmp -uid $(id -u) -type s -name agent.\* 2>/dev/null
}

function sshagent_testsocket {
    if [ ! -x "$(which ssh-add)" ] ; then
        echo "ssh-add is not available; agent testing aborted"
        return 1
    fi

    if [ X"$1" != X ] ; then
        export SSH_AUTH_SOCK=$1
    fi

    if [ X"$SSH_AUTH_SOCK" = X ] ; then
        return 2
    fi

    if [ -S $SSH_AUTH_SOCK ] ; then
        ssh-add -l > /dev/null
        if [ $? = 2 ] ; then
            echo "Socket $SSH_AUTH_SOCK is dead!  Deleting!"
            rm -f $SSH_AUTH_SOCK
            return 4
        else
            echo "Found ssh-agent $SSH_AUTH_SOCK"
            return 0
        fi
    else
        echo "$SSH_AUTH_SOCK is not a socket!"
        return 3
    fi
}

function sshagent_init {
    # ssh agent sockets can be attached to a ssh daemon process or an
    # ssh-agent process.

    AGENTFOUND=0

    # Attempt to find and use the ssh-agent in the current environment
    if sshagent_testsocket ; then AGENTFOUND=1 ; fi

    # If there is no agent in the environment, search /tmp for
    # possible agents to reuse before starting a fresh ssh-agent
    # process.
    if [ $AGENTFOUND = 0 ] ; then
        for agentsocket in $(sshagent_findsockets) ; do
            if [ $AGENTFOUND != 0 ] ; then break ; fi
            if sshagent_testsocket $agentsocket ; then AGENTFOUND=1 ; fi
        done
    fi

    # If at this point we still haven't located an agent, it's time to
    # start a new one
    if [ $AGENTFOUND = 0 ] ; then
        eval `ssh-agent`
    fi

    # Clean up
    unset AGENTFOUND
    unset agentsocket

    # Finally, show what keys are currently in the agent
    ssh-add -l
}

#########
# ALIAS #
#########

# locations

alias cdfgc="cd $FGCROOT"
alias cdg64="cd ~/projects/g64/"
alias cdbc="cd $FGCROOT/sw/fgc/barcode_id"
alias cdsw="cd $FGCROOT/sw/"
alias cd8="cd $FGCROOT/sw/fgcd/8/"
alias cddoc="cd $FGCROOT/doc/converters"
alias cdclients="cd $FGCROOT/sw/clients/perl/"
alias cdutils="cd $FGCROOT/sw/utilities/perl/"
alias cdxml="cd $FGCROOT/def/xml"
alias cddef="cd $FGCROOT/def"
alias cdtracing="cd /nfs/cs-ccr-tracing/local/cmw-log/cmw-log-writer/logs/"
alias cdnfs="cd /user/mhermose/"
alias cdafs="cd /afs/cern.ch/user/m/mhermose/"
alias cdspsdoc="cd /afs/cern.ch/user/m/mhermose/cernbox/Documents/projects/SPS_mains"

# this is required to run unoconv (used in fgc parser)
alias python='/usr/bin/python3'

# programs
alias ccrt="rlwrap $FGCROOT/sw/lib/cclibs/ccrt/Linux/x86_64/ccrt"
alias sql="rlwrap sqlplus"
alias sagent="sshagent_init"

###########
# Startup #
###########
sagent
