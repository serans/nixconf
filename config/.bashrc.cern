# bashrc file for CERN dev computers

#########
# PATHS #
#########

# Computer where I run stuff on the TN
TECHNET_HOST="cs-ccr-dev1"

# Function to make sure a command is run in the TN
run_on_technet()
{
	if [[ "$(hostname)" =~ ^cs-ccr- ]]; then
		${1}
	else
		echo "Launching command on technet..."
		ssh -X ${TECHNET_HOST} "${1}"
	fi
}

jws_tn()
{
    run_on_technet "/mcr/bin/javaws \"$1\""
}

#######
# SSH #
#######

function sshagent_findsockets {
    find /tmp -uid $(id -u) -type s -name agent.\* 2>/dev/null
}

function sshagent_testsocket {
    if [ ! -x "$(which ssh-add)" ] ; then
        echo "ssh-add is not available; agent testing aborted"
        return 1
    fi

    if [ X"$1" != X ] ; then
        export SSH_AUTH_SOCK=$1
    fi

    if [ X"$SSH_AUTH_SOCK" = X ] ; then
        return 2
    fi

    if [ -S $SSH_AUTH_SOCK ] ; then
        ssh-add -l > /dev/null
        if [ $? = 2 ] ; then
            echo "Socket $SSH_AUTH_SOCK is dead!  Deleting!"
            rm -f $SSH_AUTH_SOCK
            return 4
        else
            echo "Found ssh-agent $SSH_AUTH_SOCK"
            return 0
        fi
    else
        echo "$SSH_AUTH_SOCK is not a socket!"
        return 3
    fi
}

function sshagent_init {
    # ssh agent sockets can be attached to a ssh daemon process or an
    # ssh-agent process.

    AGENTFOUND=0

    # Attempt to find and use the ssh-agent in the current environment
    if sshagent_testsocket ; then AGENTFOUND=1 ; fi

    # If there is no agent in the environment, search /tmp for
    # possible agents to reuse before starting a fresh ssh-agent
    # process.
    if [ $AGENTFOUND = 0 ] ; then
        for agentsocket in $(sshagent_findsockets) ; do
            if [ $AGENTFOUND != 0 ] ; then break ; fi
            if sshagent_testsocket $agentsocket ; then AGENTFOUND=1 ; fi
        done
    fi

    # If at this point we still haven't located an agent, it's time to
    # start a new one
    if [ $AGENTFOUND = 0 ] ; then
        eval `ssh-agent`
    fi

    # Clean up
    unset AGENTFOUND
    unset agentsocket

    # Finally, show what keys are currently in the agent
    ssh-add -l
}

#########
# ALIAS #
#########

# locations

alias cdtracing="cd /nfs/cs-ccr-tracing/local/cmw-log/cmw-log-writer/logs/"
alias cdnfs="cd /user/mhermose/"
alias cdafs="cd /afs/cern.ch/user/m/mhermose/"

############
# programs #
############
alias sql="rlwrap sqlplus"
alias sagent="sshagent_init"

# Fgcrun+
alias fgcrun="ssh -Y -o StrictHostKeyChecking=no cs-ccr-teepc2.cern.ch /user/pclhc/bin/perl/fgcrun+.sh"

# FESA2 device management tool
alias f2dev="jws_tn /acc/local/java/fesa/CURRENT_RELEASE/FMT.jnlp"

# FESA2 Shell tool
alias f2sh="jws_tn /acc/local/java/fesa/CURRENT_RELEASE/FST.jnlp"

# FESA2 Navigator
alias f2nav="jws_tn /acc/local/java/fesa/CURRENT_RELEASE/FNT.jnlp"

# CMW admin
alias cmwadmin="jws_tn http://slwww.cern.ch/~pcrops/releaseinfo/pcropsdist/cmw/cmw-admin/PRO/cmw-admin.jnlp"

# FESA3 Navigator
fnav(){ run_on_technet "/user/pcrops/deployments/applications/cern/fesa/Navigator/PRO/source/runFESA3NavigatorLauncher  \"$1\""; }

# DIAMON
alias diamon="jws_tn http://bewww.cern.ch/~diamonop/dmn2-gui-console/cgi-bin/dmn2-console-pro.jnlpx"

# Laser console
alias laser="jws_tn http://bewww/~diamonop/laser-alarm-console/PRO/deploy/launch.jnlpx"

# JAPC toolbox
alias japc="jws_tn http://abwww.cern.ch/ap/dist/inca/app/inca-app/PRO/IncaJapcToolbox.jnlp"

# OASIS
alias oasis="jws_tn http://abwww.cern.ch/ap/pro/oasis/oasis-viewer/oasis-viewer.jnlp"

# TIMBER
alias timber="http://abwww.cern.ch/~pcrops/releaseinfo/pcropsdist/accsoft/cals/accsoft-cals-extr-app/PRO/timber.jnlpx"

# Tgm Video
alias tgmvideo="jws_tn http://abwww.cern.ch/ap/dist/accsoft/timing/accsoft-timing-app-tgmvideo/PRO/VideoLauncher.jnlp"

# Remote FEC reset
rem_reset(){ run_on_technet "/mcr/reset/rem_reset \"$1\""; }

###########
# Startup #
###########
sagent
